openapi: 3.0.3
info:
  title: Calendly Clone
  description: A clone of the popular calendly.com.
  version: 1.0.0
servers:
- url: /
tags:
- name: events
  description: Events are created by folks who are open to meeting with others
- name: reservations
  description: "Reservations are made by people who want to participate in an event,\
    \ at a given date and time."
paths:
  /events:
    get:
      tags:
      - events
      summary: Get all events
      description: Get all event details
      operationId: getEvents
      responses:
        "200":
          description: The events
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
      x-swagger-router-controller: Events
  /events/{id}:
    get:
      tags:
      - events
      summary: Get event
      description: Get event details
      operationId: getEventById
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "404":
          description: No event found
        "200":
          description: The event
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
      x-swagger-router-controller: Events
    put:
      tags:
      - events
      summary: Update the event
      description: Update the single event in our system.
      operationId: updateEvent
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        description: Update the event
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        "200":
          description: The event
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
      x-swagger-router-controller: Events
  /reservations:
    get:
      tags:
      - reservations
      summary: Get all reservations
      description: Get all reservations
      operationId: getReservations
      parameters:
      - name: eventId
        in: query
        description: Filter reservations by event
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: List of reservations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
      x-swagger-router-controller: Reservations
    post:
      tags:
      - reservations
      - events
      summary: Reserve a given event and time.
      description: Reserve a given event
      operationId: reserveEvent
      requestBody:
        description: The reservation.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reservation'
      responses:
        "201":
          description: Reservation made successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
        "409":
          description: "The reservation cannot be made as the event, startTime and/or\
            \ endTime are unavailable."
        default:
          description: Maleformed request
      x-swagger-router-controller: Reservations
  /reservations/{id}:
    get:
      tags:
      - reservations
      summary: Get the details of this reservation by ID.
      operationId: getReservationsByID
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 0
      responses:
        "404":
          description: Missing reservation
        "200":
          description: The details of the reservation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
      x-swagger-router-controller: Reservations
components:
  schemas:
    Reservation:
      required:
      - email
      - endDateTime
      - eventId
      - id
      - localTz
      - name
      - startDateTime
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        eventId:
          type: integer
        email:
          type: string
          format: email
          example: bob@example.com
        name:
          type: string
          example: Bob Example
        localTz:
          $ref: '#/components/schemas/Timezone'
        startDateTime:
          type: string
          example: 2022-01-01T00:00:000Z
        endDateTime:
          type: string
          example: 2022-01-01T00:01:000Z
      example:
        eventId: 6
        startDateTime: 2022-01-01T00:00:000Z
        name: Bob Example
        localTz: Africa/Johannesburg
        endDateTime: 2022-01-01T00:01:000Z
        email: bob@example.com
    DayOfWeek:
      type: string
      example: mon
      enum:
      - mon
      - tue
      - wed
      - thu
      - fri
      - sat
      - sun
    Timezone:
      pattern: "^[a-zA-Z0-9_]{1,14}/[a-zA-Z0-9_]{1,14}(/[a-zA-Z0-9_]+)?"
      type: string
      example: Africa/Johannesburg
    Event:
      required:
      - eventTz
      - id
      - slotDuration
      - timeRanges
      - title
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          example: Catch up call
        eventTz:
          $ref: '#/components/schemas/Timezone'
        slotDuration:
          type: integer
          description: "In minutes. timeRanges cannot be smaller than this number,\
            \ adding them will result in a 400 response."
          example: 30
          enum:
          - 15
          - 20
          - 30
          - 60
        timeRanges:
          minLength: 1
          type: array
          items:
            $ref: '#/components/schemas/Event_timeRanges'
      example:
        slotDuration: 30
        eventTz: Africa/Johannesburg
        timeRanges:
        - dayOfWeek: mon
          startTime: '18:00'
          endTime: '19:00'
        - dayOfWeek: mon
          startTime: '18:00'
          endTime: '19:00'
        id: 0
        title: Catch up call
    inline_response_200:
      required:
      - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Event'
      example:
        items:
        - slotDuration: 30
          eventTz: Africa/Johannesburg
          timeRanges:
          - dayOfWeek: mon
            startTime: '18:00'
            endTime: '19:00'
          - dayOfWeek: mon
            startTime: '18:00'
            endTime: '19:00'
          id: 0
          title: Catch up call
        - slotDuration: 30
          eventTz: Africa/Johannesburg
          timeRanges:
          - dayOfWeek: mon
            startTime: '18:00'
            endTime: '19:00'
          - dayOfWeek: mon
            startTime: '18:00'
            endTime: '19:00'
          id: 0
          title: Catch up call
    inline_response_200_1:
      required:
      - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Reservation'
      example:
        items:
        - eventId: 6
          startDateTime: 2022-01-01T00:00:000Z
          name: Bob Example
          localTz: Africa/Johannesburg
          id: 0
          endDateTime: 2022-01-01T00:01:000Z
          email: bob@example.com
        - eventId: 6
          startDateTime: 2022-01-01T00:00:000Z
          name: Bob Example
          localTz: Africa/Johannesburg
          id: 0
          endDateTime: 2022-01-01T00:01:000Z
          email: bob@example.com
    Event_timeRanges:
      type: object
      properties:
        dayOfWeek:
          $ref: '#/components/schemas/DayOfWeek'
        startTime:
          type: string
          example: '18:00'
        endTime:
          type: string
          example: '19:00'
      example:
        dayOfWeek: mon
        startTime: '18:00'
        endTime: '19:00'
